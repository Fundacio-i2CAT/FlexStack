name: CI Pipeline

on:
  push:
    branches:
      - main
      - "**" # Optional: Run for all branches
  pull_request:

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: .cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run Unit Tests
        run: python -m unittest

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install coverage
      - name: Run Coverage
        run: |
          coverage run -m unittest discover
          coverage xml
          coverage html
          coverage report -m --fail-under=93
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov

  flake8:
    name: Run Flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install flake8
      - name: Run Flake8
        run: flake8 --ignore E501,E226,W503 --exclude=src/... src/

  pylint:
    name: Run Pylint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pylint
      - name: Run Pylint
        run: pylint src/... --fail-under=9.49

  build_wheel:
    name: Build Python Wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install build
      - name: Build Wheel
        run: python -m build
      - name: Upload Wheel
        uses: actions/upload-artifact@v3
        with:
          name: python-wheels
          path: dist/*.whl
